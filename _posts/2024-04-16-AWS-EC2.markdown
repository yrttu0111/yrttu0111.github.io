---
layout: post
title: AWS IAM, EC2
subtitle: AWS ASS 준비 EC2
categories: AWS
tags: [AWS, ASS, IAM, EC2]
date: 2023-04-16
---

AWS SAA

IAM (global)
사용자 생성 및 권한 무여

생성시 루트 사용자

그 후 사용자 생성해야함

그룹으로 묶어 권한을 줄수 있다.
중복 그룹으로 부여 가능

최소 권한의 원칙 - 사용하는 만큼만 권한을 주자

IAM -> USER -> 유저 생성

mfa -> like otp
가상과 물리적 이 있음

amazone sdk
cli 로 가능하게 cloud shell 로도 가능하다

access key

iam role

IAM의 credential report 를 통해 유저들의 정보나 mfa 설정, 비밀번호 변경
활동 등 css 파일로 다운받아서 모니터링 가능하다

요약 iam 사용자는 회사 내의 실제 물리적 사용자와 매핑되어야 하며
AWS 콜솔 비밀번호를 가질수 있고
그룹화 할 수 있다. 역할도 만들 수 있다.

보안을 위해 MFA를 활성화 할 수 있다.

billing 에서 budget은 알림

과금 될때 이메일로 알림을 보낼 수도
월단위로 금액을 설정해둘 수도 있다

# EC2

엘라스틱 컴퓨트 클라우드

Infrastructure as a Service

가상 머신을 임대 할 수 있다. EC2 인스턴스
데이터를 저장할 수 있는 가상 드라이브 또는 EBS 볼륨에 저장 할 수 있다.

엘라스틱 로드 밸런서로 (ELB) 로드 분산시킬 수 있다.

오토스케이링 그룹 (ASG)을 통해 서비스 확장 가능.

ec2 os linux window mac

cpu ram stoage 선택

인스턴트에 연결한 네트워크 종류 선택, 속도가 빠른 네트워크 카드

어떤 종류의 공용 ip

방화벽 선택 -> 보안그룹

인스턴스를 구성하기 위한 부트스트랩 스크립트

원하는 데로 vm 설정해 구성 가능

부트스트래핑

머신이 작동될 대 명령을 시작하는 것

부팅 작업을 자동화 하기때문에 부트스트래핑 이라함

업데이트, 소프트웨어 설치

사용자 데이터 스크립트는 루트 계정에서 실행됨
따라서 모든 명령문은 sudo를 사용

## 인스턴스 종류

m5.2xlarge

m: 인스턴스 클래스

5: 세대

2xlarge: 사이즈

범용 인스턴스 generic

컴퓨팅 메모리 네트워킹 간의 균형

t시리즈 M 시리즈 등 있음

고성능 프로세스 compute optimaized

컴퓨터 집약적인 작업에 최적화된 인스턴스

High performance computing 머신러닝 전용 게임서버등 에 사용 하면 좋음

cpu 굳

c 시리즈

메모리 최적화 Memory optimized

RAM

고성능의 관계 비관계형 데이터 베이스

엘라스틱 캐시를 예로 들수 있는 분산 웹스케일 캐시 저장소에도 사용

비지니스 인텔리전스 BI 에 최적화된 in memori db 와 대규모 비정형 데이터의 실시간 처리를 실행하는

어플리케이션에서도 사용

R시리즈 x1 high memori

스토리지 최적화 인스턴스

로컬 스토리지에서 대규모의 데이터 셋에 액세스할 때 적합한 인스턴스

high frequency 온라인 트랜잭션 처리인 OLTP 시스템에 사용되며

관계형과 비관계형인 noSQL db에서 사용

예를 들어 레디스 같은 메모리 데이터 베이스의 캐시나 데이터 웨어하우징 애플리케이션과 분산 파일

시스템에 사용

I, d H1시리즈 사용

## 방화벽

보안 그룹

ec2 인스턴스에 접근 할 수 있는 ip 허용

inbound 인스턴스로 들어오는 네트워크 통제

outbound 인스턴스에서 외부로 나가는 아웃바운드 네트워크 통제

여러 인스턴스에 연결할 수 있으며

보안 그룹과 인스턴스 간의

일대일 관계는 없다. 인스턴스에도 여러 보안 그룹을 연결할 수 있다.

보안 그룸은 지역과 vpc 결합으로 통제되어 있다.

지역을 전환 하면 새 보안 그룹을 생성 하거나 다른 VPC를 생성해야 한다.

SSH 나 특별한 보안 규칙은 따로 보안 그룹을 생성해주는게 좋다.

보안그룹이 보안그룹을 참조?

### Classic ports

22 = SSH (Secure shell)

21 = FTP (File Transfer Protocol) 파일 업로드시 사용

22 = SFTP (Secure File Transfer Protocol) - upload files using SSH

엇 22 는 SSH 아니였나요!?!?

SSH를 사용해서 업로드 하기 때문이고 보안 파일 전송 프로토콜이 되기 때문

80 = HTTP

443 = HTTPS

3389 Remote Desktop Protocol - log into a window instace

우분투에서 윈도우 원격 사용했을 때 3389 포트 사용했었는데

3306 MySQL

등등등

타임아웃 -> 보안그룹 문제일 것이다!

## purchasing options

### On-Demand Instances

필요한 만큼만 사용한다.
1초단위 청구
단기적 사용이나 중단 없는 워크로드가 필요할 때, 언제까지 쓸지 예측할 수 없을 때 사용하면 좋다.

### Reserved (1 & 3 years)

오래동안 인스턴스를 사용할 예정이라면
1년 또는 3년 단위로 계약 해 할인을 받을 수 있다. (72% 가량? 온디맨드에 비교하면)
장기 사용 및 사용량이 일정한 애플리케이션 예) db

그리고 전환형 예약 인스턴스라는 것이 있다.
인스턴스 타입, 인스턴스 패밀리, 운영체계, 범위, 테넌시를 변경할 수 있다.
유연성이 크기 때문에 할인율이 좀더 적다

### Saving Plans (1 & 3 years)

절약 플랜은 인스턴스 유형을 약정하는게 달러 단위로 특정한 사용량을 약정한다.
1년 or 3년 동안 시간당 10달러로 약정 사용한도 넘어가면 온디맨드 가격으로 청구하게 된다.
절약플랜은 특정한 인스턴스와 패밀리, 리전으로 고정하게 된다.
테넌시는 호스트, 전용, 기본 등을 전환 가능

### Spot Instances

매우 저렴 최대 90%?
지불하려는 최대 가격을 정의하고 만일 스폿 가격이 그 가격을 넘게되면 인스턴스가 손실됨
언제는 손실 될 수 있음 신뢰성 낮음
배치작업이나 데이터 분석, 이미지 처리, 모든 종류의 분산형 워크로드 또는 시작 시간과 종료시간이 유연한 워크로드 등이 있다.
중요한 작업이나 데이터 베이스에는 적합하지 않다.

### Dedicated Hosts

전용 호스트는 물리적 서버 전체를 예약해서 인스턴스 배치를 제어할 수 있다.
전용 호스트인 온디맨드로 초당 비용 지불 또는 1년 또는 3년 예약 가능하다.
실제 물리적 서버를 예약해 가장 비싸다.
규정이나 법규를 준수해야하는 회가를 가지고 있는경우 사용된다.

### Dedicated Instances

전용 하드웨어에서 실행되는 인스턴스로 물리적 서버와는 다르다.
같은 계정에서 다른 인스턴스와 함께 하드웨어를 공유할 수 있고, 인스턴스 배치에 대한 통제권이 없다.

### EC2 Capacity Reservations

ec2 용량 예약 원하는 기간 동안 특정한 AZ에서 온디맨드 인스턴스를 예약할 수 있고 필요할 때마다 용량에 접근할 수 있다.
기간 약정은 없고 언제든 예약하고 취소할 수 있다.
청구 할인도 없다
특정한 AZ에 있어야 하는 단기적이고 중단 없는 워크로드에 아주 적합하다
